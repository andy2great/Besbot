{"version":3,"file":"main.js","mappings":";;;;;;;;;AAAA,+CAAmC;AAEnC,MAAM,MAAM,GAAG,OAAO,CAAC,MAAM,EAAE,CAAC;AAEhC,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE;IAC3B,GAAG,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,oBAAoB,EAAE,CAAC,CAAC;AAC9C,CAAC,CAAC,CAAC;AAEH,qBAAe,MAAM,CAAC;;;;;;;;ACRtB;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;;;;;ACtBA,+CAAmC;AACnC,yCAA6B;AAE7B,4EAA2C;AAE3C,MAAM,GAAG,GAAG,OAAO,EAAE,CAAC;AACtB,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;AAExB,GAAG,CAAC,GAAG,CAAC,kBAAa,CAAC,CAAC;AAEvB,MAAM,IAAI,GAAG,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC;AACtC,MAAM,MAAM,GAAG,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,GAAG,EAAE;IACnC,OAAO,CAAC,GAAG,CAAC,iCAAiC,IAAI,GAAG,CAAC,CAAC;AACxD,CAAC,CAAC,CAAC;AACH,MAAM,CAAC,EAAE,CAAC,OAAO,EAAE,OAAO,CAAC,KAAK,CAAC,CAAC;AAGlC,MAAM,MAAM,GAAI,IAAI,CAAC,OAAO,CAAC,uBAAuB,EAAE;IACpD,QAAQ,EAAE,UAAU;IACpB,QAAQ,EAAE,iBAAiB;CAC5B,CAAC;AAEF,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE;IACnB,MAAM,CAAC,SAAS,CAAC,UAAU,EAAE,UAAU,GAAG;QACxC,IAAI,CAAC,GAAG,EAAE;YACR,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,YAAY,CAAC;YACxC,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,YAAY,CAAC;YACxC,MAAM,CAAC,OAAO,CAAC,UAAU,EAAE,YAAY,CAAC;SACzC;QAED,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC;IAClB,CAAC,CAAC;AACJ,CAAC,CAAC;AAEF,MAAM,CAAC,EAAE,CAAC,SAAS,EAAE,UAAU,KAAK,EAAE,OAAO;IAC3C,oBAAoB;IACpB,OAAO,CAAC,GAAG,CAAC,KAAK,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC;IACtC,MAAM,CAAC,GAAG,EAAE;AACd,CAAC,CAAC","sources":["webpack://besbot/./apps/bridge/src/app/question.ts","webpack://besbot/external commonjs \"express\"","webpack://besbot/external commonjs \"mqtt\"","webpack://besbot/webpack/bootstrap","webpack://besbot/./apps/bridge/src/main.ts"],"sourcesContent":["import * as express from 'express';\r\n\r\nconst router = express.Router();\r\n\r\nrouter.get('/', (req, res) => {\r\n  res.send({ message: 'Welcome to bridge!' });\r\n});\r\n\r\nexport default router;","module.exports = require(\"express\");","module.exports = require(\"mqtt\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","import * as express from 'express';\nimport * as mqtt from 'mqtt';\n\nimport questionRoute from './app/question';\n\nconst app = express();\napp.use(express.json());\n\napp.use(questionRoute);\n\nconst port = process.env.port || 8083;\nconst server = app.listen(port, () => {\n  console.log(`Listening at http://localhost:${port}/`);\n});\nserver.on('error', console.error);\n\n\nconst client  = mqtt.connect('mqtt://localhost:1883', {\n  username: 'beslogic',\n  password: 'Beslogic#123456'\n})\n\nclient.on('connect', function () {\n  client.subscribe('presence', function (err) {\n    if (!err) {\n      client.publish('presence', 'Hello mqtt')\n      client.publish('presence', 'Hello mqtt')\n      client.publish('presence', 'Hello mqtt')\n    }\n\n    console.log(err)\n  })\n})\n\nclient.on('message', function (topic, message) {\n  // message is Buffer\n  console.log(topic, message.toString())\n  client.end()\n})"],"names":[],"sourceRoot":""}